name: Release

on:
  release:
    types: [released]

env:
  NODE_VERSION: "18.20.3"

concurrency:
  group: release
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    steps:
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ vars.GH_MTR_PACKAGE_VERSIONS_APP_ID }}
          application_private_key: ${{ secrets.GH_MTR_PACKAGE_VERSIONS_APP_SECRET }}

      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          ref: main
          lfs: false
          token: ${{ steps.get_workflow_token.outputs.token }}

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Get build url
        id: get_distribution_build
        run: |
          BUILD_URL=$(node .github/scripts/find_build_url.js "$ASSETS")
          echo "build_url=$BUILD_URL" >> "$GITHUB_OUTPUT"
          echo "$BUILD_URL"
        env:
          ASSETS: ${{ toJson(github.event.release.assets) }}

      - name: Create separate directory
        run: mkdir production-build && cd production-build

      - name: Download distribution build
        run: curl -OL $DOWNLOAD_URL
        env:
          DOWNLOAD_URL: ${{ steps.get_distribution_build.outputs.build_url }}

      - name: Unzip distribution-package.zip
        run: unzip -q distribution-package.zip

      - name: Configure GH user
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"}

      - name: Update package version
        id: update_package_version
        run: |
          RELEASE_VERSION=$(echo "$VERSION" | sed -e 's/-beta\.[[:digit:]_-]\{1,\}//g')
          npm version $VERSION
          git push
          echo "tag=$RELEASE_VERSION" >> "$GITHUB_OUTPUT"
          git push --tags
        env:
          VERSION: ${{ github.event.release.tag_name }}
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}

      - name: Publish the NPM package
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Update release tag
        uses: actions/github-script@v6
        with:
          script: |
            const {TAG_NAME, RELEASE_ID} = process.env

            github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: RELEASE_ID,
                name: TAG_NAME,
                tag_name: TAG_NAME,
            });
        env:
          RELEASE_ID: ${{ github.event.release.id }}
          TAG_NAME: ${{ steps.update_package_version.outputs.tag }}
